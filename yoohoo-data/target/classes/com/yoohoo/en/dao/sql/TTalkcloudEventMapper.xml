<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yoohoo.en.dao.mapper.TTalkcloudEventMapper" >
  <resultMap id="BaseResultMap" type="com.yoohoo.en.dao.model.TTalkcloudEvent" >
    <id column="event_id" property="eventId" jdbcType="INTEGER" />
    <result column="room_id" property="roomId" jdbcType="VARCHAR" />
    <result column="lesson_id" property="lessonId" jdbcType="INTEGER" />
    <result column="chapter_id" property="chapterId" jdbcType="INTEGER" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="event_type" property="eventType" jdbcType="INTEGER" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    event_id, room_id, lesson_id, chapter_id, class_id, event_type, add_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yoohoo.en.dao.model.TTalkcloudEventExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_talkcloud_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="MysqlDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_talkcloud_event
    where event_id = #{eventId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_talkcloud_event
    where event_id = #{eventId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yoohoo.en.dao.model.TTalkcloudEventExample" >
    delete from t_talkcloud_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yoohoo.en.dao.model.TTalkcloudEvent" useGeneratedKeys="true" keyProperty="eventId" >
    insert into t_talkcloud_event (room_id, lesson_id, chapter_id, 
      class_id, event_type, add_time
      )
    values (#{roomId,jdbcType=VARCHAR}, #{lessonId,jdbcType=INTEGER}, #{chapterId,jdbcType=INTEGER}, 
      #{classId,jdbcType=INTEGER}, #{eventType,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yoohoo.en.dao.model.TTalkcloudEvent" useGeneratedKeys="true" keyProperty="eventId" >
    insert into t_talkcloud_event
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roomId != null" >
        room_id,
      </if>
      <if test="lessonId != null" >
        lesson_id,
      </if>
      <if test="chapterId != null" >
        chapter_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="eventType != null" >
        event_type,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roomId != null" >
        #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="lessonId != null" >
        #{lessonId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null" >
        #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="eventType != null" >
        #{eventType,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yoohoo.en.dao.model.TTalkcloudEventExample" resultType="java.lang.Integer" >
    select count(*) from t_talkcloud_event
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_talkcloud_event
    <set >
      <if test="record.eventId != null" >
        event_id = #{record.eventId,jdbcType=INTEGER},
      </if>
      <if test="record.roomId != null" >
        room_id = #{record.roomId,jdbcType=VARCHAR},
      </if>
      <if test="record.lessonId != null" >
        lesson_id = #{record.lessonId,jdbcType=INTEGER},
      </if>
      <if test="record.chapterId != null" >
        chapter_id = #{record.chapterId,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.eventType != null" >
        event_type = #{record.eventType,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null" >
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_talkcloud_event
    set event_id = #{record.eventId,jdbcType=INTEGER},
      room_id = #{record.roomId,jdbcType=VARCHAR},
      lesson_id = #{record.lessonId,jdbcType=INTEGER},
      chapter_id = #{record.chapterId,jdbcType=INTEGER},
      class_id = #{record.classId,jdbcType=INTEGER},
      event_type = #{record.eventType,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yoohoo.en.dao.model.TTalkcloudEvent" >
    update t_talkcloud_event
    <set >
      <if test="roomId != null" >
        room_id = #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="lessonId != null" >
        lesson_id = #{lessonId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null" >
        chapter_id = #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="eventType != null" >
        event_type = #{eventType,jdbcType=INTEGER},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where event_id = #{eventId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yoohoo.en.dao.model.TTalkcloudEvent" >
    update t_talkcloud_event
    set room_id = #{roomId,jdbcType=VARCHAR},
      lesson_id = #{lessonId,jdbcType=INTEGER},
      chapter_id = #{chapterId,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=INTEGER},
      event_type = #{eventType,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where event_id = #{eventId,jdbcType=INTEGER}
  </update>
  <sql id="MysqlDialectSuffix" >
    <if test="pageHelper != null" >
      <![CDATA[ limit #{pageHelper.begin}, #{pageHelper.length}]]>
    </if>
  </sql>
  <insert id="insertBatch" parameterType="com.yoohoo.en.dao.model.TTalkcloudEvent" >
    insert into t_talkcloud_event
    <trim prefix="(" suffix=")" suffixOverrides="," >
      event_id,room_id,lesson_id,chapter_id,class_id,event_type,add_time,
    </trim>
    values
    <foreach collection="list" index="index" item="item" separator="," >
      (
      <trim suffixOverrides="," >
        #{item.eventId,jdbcType=INTEGER},#{item.roomId,jdbcType=VARCHAR},#{item.lessonId,jdbcType=INTEGER},#{item.chapterId,jdbcType=INTEGER},#{item.classId,jdbcType=INTEGER},#{item.eventType,jdbcType=INTEGER},#{item.addTime,jdbcType=TIMESTAMP},
      </trim>
      )
    </foreach>
  </insert>
</mapper>