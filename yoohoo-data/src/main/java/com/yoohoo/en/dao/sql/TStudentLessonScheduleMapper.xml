<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yoohoo.en.dao.mapper.TStudentLessonScheduleMapper" >
  <resultMap id="BaseResultMap" type="com.yoohoo.en.dao.model.TStudentLessonSchedule" >
    <id column="record_id" property="recordId" jdbcType="INTEGER" />
    <result column="schedule_id" property="scheduleId" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="lesson_id" property="lessonId" jdbcType="INTEGER" />
    <result column="chapter_id" property="chapterId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="log_id" property="logId" jdbcType="INTEGER" />
    <result column="lesson_time" property="lessonTime" jdbcType="TIMESTAMP" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
    <result column="r_id" property="rId" jdbcType="INTEGER" />
    <result column="leave_time" property="leaveTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
     status > 0 and
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    record_id, schedule_id, student_id, lesson_id, chapter_id, `type`, `status`, log_id, 
    lesson_time, addtime, r_id, leave_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yoohoo.en.dao.model.TStudentLessonScheduleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_student_lesson_schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="MysqlDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_student_lesson_schedule
    where record_id = #{recordId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_student_lesson_schedule
    where record_id = #{recordId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yoohoo.en.dao.model.TStudentLessonScheduleExample" >
    delete from t_student_lesson_schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>

  <insert id="insert" parameterType="com.yoohoo.en.dao.model.TStudentLessonSchedule" useGeneratedKeys="true" keyProperty="recordId" >
    insert into t_student_lesson_schedule (schedule_id, student_id, lesson_id, 
      chapter_id, `type`, `status`, 
      log_id, lesson_time, addtime, 
      r_id, leave_time,add_user_id)
    values (#{scheduleId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{lessonId,jdbcType=INTEGER}, 
      #{chapterId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{logId,jdbcType=INTEGER}, #{lessonTime,jdbcType=TIMESTAMP}, #{addtime,jdbcType=TIMESTAMP}, 
      #{rId,jdbcType=INTEGER}, #{leaveTime,jdbcType=TIMESTAMP}, #{addUserId})
  </insert>
  <insert id="insertSelective" parameterType="com.yoohoo.en.dao.model.TStudentLessonSchedule" useGeneratedKeys="true" keyProperty="recordId" >
    insert into t_student_lesson_schedule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="scheduleId != null" >
        schedule_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="lessonId != null" >
        lesson_id,
      </if>
      <if test="chapterId != null" >
        chapter_id,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="logId != null" >
        log_id,
      </if>
      <if test="lessonTime != null" >
        lesson_time,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
      <if test="rId != null" >
        r_id,
      </if>
      <if test="leaveTime != null" >
        leave_time,
      </if>
      <if test="addUserId != null" >
        add_user_id
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="scheduleId != null" >
        #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="lessonId != null" >
        #{lessonId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null" >
        #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="logId != null" >
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="lessonTime != null" >
        #{lessonTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="rId != null" >
        #{rId,jdbcType=INTEGER},
      </if>
      <if test="leaveTime != null" >
        #{leaveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addUserId != null" >
        #{addUserId}
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yoohoo.en.dao.model.TStudentLessonScheduleExample" resultType="java.lang.Integer" >
    select count(*) from t_student_lesson_schedule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="ByExample"  resultType="com.yoohoo.en.dao.model.TStudentLessonSchedule" >
    select * from t_student_lesson_schedule
    where t_student_lesson_schedule.schedule_id = #{scheduleId}
  </select>

  <!--<select id="queryTeacherLessonSchedule" resultType="com.yoohoo.en.dao.model.TTeacherInfo">-->
    <!--select name,en_name,teacherId from t_teacher_info-->
  <!--</select>-->
  <update id="updateByExampleSelective" parameterType="map" >
    update t_student_lesson_schedule
    <set >
      <if test="record.recordId != null" >
        record_id = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.scheduleId != null" >
        schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null" >
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.lessonId != null" >
        lesson_id = #{record.lessonId,jdbcType=INTEGER},
      </if>
      <if test="record.chapterId != null" >
        chapter_id = #{record.chapterId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.logId != null" >
        log_id = #{record.logId,jdbcType=INTEGER},
      </if>
      <if test="record.lessonTime != null" >
        lesson_time = #{record.lessonTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.addtime != null" >
        addtime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rId != null" >
        r_id = #{record.rId,jdbcType=INTEGER},
      </if>
      <if test="record.leaveTime != null" >
        leave_time = #{record.leaveTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_student_lesson_schedule
    set record_id = #{record.recordId,jdbcType=INTEGER},
      schedule_id = #{record.scheduleId,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      lesson_id = #{record.lessonId,jdbcType=INTEGER},
      chapter_id = #{record.chapterId,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      log_id = #{record.logId,jdbcType=INTEGER},
      lesson_time = #{record.lessonTime,jdbcType=TIMESTAMP},
      addtime = #{record.addtime,jdbcType=TIMESTAMP},
      r_id = #{record.rId,jdbcType=INTEGER},
      leave_time = #{record.leaveTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yoohoo.en.dao.model.TStudentLessonSchedule" >
    update t_student_lesson_schedule
    <set >
      <if test="scheduleId != null" >
        schedule_id = #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="lessonId != null" >
        lesson_id = #{lessonId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null" >
        chapter_id = #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="logId != null" >
        log_id = #{logId,jdbcType=INTEGER},
      </if>
      <if test="lessonTime != null" >
        lesson_time = #{lessonTime,jdbcType=TIMESTAMP},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="rId != null" >
        r_id = #{rId,jdbcType=INTEGER},
      </if>
      <if test="leaveTime != null" >
        leave_time = #{leaveTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yoohoo.en.dao.model.TStudentLessonSchedule" >
    update t_student_lesson_schedule
    set schedule_id = #{scheduleId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER},
      lesson_id = #{lessonId,jdbcType=INTEGER},
      chapter_id = #{chapterId,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      log_id = #{logId,jdbcType=INTEGER},
      lesson_time = #{lessonTime,jdbcType=TIMESTAMP},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      r_id = #{rId,jdbcType=INTEGER},
      leave_time = #{leaveTime,jdbcType=TIMESTAMP}
    where record_id = #{recordId,jdbcType=INTEGER}
  </update>
  <sql id="MysqlDialectSuffix" >
    <if test="pageHelper != null" >
      <![CDATA[ limit #{pageHelper.begin}, #{pageHelper.length}]]>
    </if>
  </sql>
  <insert id="insertBatch" parameterType="com.yoohoo.en.dao.model.TStudentLessonSchedule"  >
    insert into t_student_lesson_schedule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      record_id,schedule_id,student_id,lesson_id,chapter_id,type,status,log_id,lesson_time,addtime,r_id,leave_time,update_time,add_user_id,update_user_id
    </trim>
    values
    <foreach collection="list" index="index" item="item" separator="," >
      (
      <trim suffixOverrides="," >
        #{item.recordId,jdbcType=INTEGER},#{item.scheduleId,jdbcType=INTEGER},
        #{item.studentId,jdbcType=INTEGER},#{item.lessonId,jdbcType=INTEGER},#{item.chapterId,jdbcType=INTEGER},
        #{item.type,jdbcType=INTEGER},#{item.status,jdbcType=INTEGER},#{item.logId,jdbcType=INTEGER},#{item.lessonTime,jdbcType=TIMESTAMP},
        #{item.addtime,jdbcType=TIMESTAMP},#{item.rId,jdbcType=INTEGER},#{item.leaveTime,jdbcType=TIMESTAMP},
        #{item.updateTime,jdbcType=TIMESTAMP},#{item.addUserId,jdbcType=INTEGER},#{item.updateUserId,jdbcType=INTEGER}
      </trim>
      )
    </foreach>
  </insert>



  <delete id="deleteBatch" parameterType="com.yoohoo.en.dao.model.TStudentLessonSchedule">
    delete  from t_student_lesson_schedule
    where(schedule_id,student_id) in
    <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
      (#{item.scheduleId},#{item.studentId})
    </foreach>
  </delete>
	
 	<select id="queryLessonSchedulCount" parameterType="java.lang.Long"
 	 resultType="com.yoohoo.en.dao.model.TLessonInfo">
		select count(t.schedule_id) classBeginCount, t.lesson_id lessonId from 
			t_student_lesson_schedule t
				where t.`status`=2
					and t.lesson_id in
		<foreach collection="list" item="lessonId" open="(" separator="," close=")">
            #{lessonId}
        </foreach>
        group by t.lesson_id
	</select>
</mapper>