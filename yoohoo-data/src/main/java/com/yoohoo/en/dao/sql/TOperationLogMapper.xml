<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yoohoo.en.dao.mapper.TOperationLogMapper" >
  <resultMap id="BaseResultMap" type="com.yoohoo.en.dao.model.TOperationLog" >
    <id column="operate_id" property="operateId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="bid" property="bid" jdbcType="VARCHAR" />
    <result column="msg" property="msg" jdbcType="VARCHAR" />
    <result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    operate_id, `type`, bid, msg, addtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yoohoo.en.dao.model.TOperationLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_operation_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="MysqlDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_operation_log
    where operate_id = #{operateId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_operation_log
    where operate_id = #{operateId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yoohoo.en.dao.model.TOperationLogExample" >
    delete from t_operation_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yoohoo.en.dao.model.TOperationLog" useGeneratedKeys="true" keyProperty="operateId" >
    insert into t_operation_log (`type`, bid, msg, 
      addtime)
    values (#{type,jdbcType=VARCHAR}, #{bid,jdbcType=VARCHAR}, #{msg,jdbcType=VARCHAR}, 
      #{addtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yoohoo.en.dao.model.TOperationLog" useGeneratedKeys="true" keyProperty="operateId" >
    insert into t_operation_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="type != null" >
        `type`,
      </if>
      <if test="bid != null" >
        bid,
      </if>
      <if test="msg != null" >
        msg,
      </if>
      <if test="addtime != null" >
        addtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="bid != null" >
        #{bid,jdbcType=VARCHAR},
      </if>
      <if test="msg != null" >
        #{msg,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        #{addtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yoohoo.en.dao.model.TOperationLogExample" resultType="java.lang.Integer" >
    select count(*) from t_operation_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_operation_log
    <set >
      <if test="record.operateId != null" >
        operate_id = #{record.operateId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        `type` = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.bid != null" >
        bid = #{record.bid,jdbcType=VARCHAR},
      </if>
      <if test="record.msg != null" >
        msg = #{record.msg,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null" >
        addtime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_operation_log
    set operate_id = #{record.operateId,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=VARCHAR},
      bid = #{record.bid,jdbcType=VARCHAR},
      msg = #{record.msg,jdbcType=VARCHAR},
      addtime = #{record.addtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yoohoo.en.dao.model.TOperationLog" >
    update t_operation_log
    <set >
      <if test="type != null" >
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="bid != null" >
        bid = #{bid,jdbcType=VARCHAR},
      </if>
      <if test="msg != null" >
        msg = #{msg,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null" >
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where operate_id = #{operateId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yoohoo.en.dao.model.TOperationLog" >
    update t_operation_log
    set `type` = #{type,jdbcType=VARCHAR},
      bid = #{bid,jdbcType=VARCHAR},
      msg = #{msg,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=TIMESTAMP}
    where operate_id = #{operateId,jdbcType=INTEGER}
  </update>
  <sql id="MysqlDialectSuffix" >
    <if test="pageHelper != null" >
      <![CDATA[ limit #{pageHelper.begin}, #{pageHelper.length}]]>
    </if>
  </sql>
  <insert id="insertBatch" parameterType="com.yoohoo.en.dao.model.TOperationLog" >
    insert into t_operation_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      operate_id,type,bid,msg,addtime,
    </trim>
    values
    <foreach collection="list" index="index" item="item" separator="," >
      (
      <trim suffixOverrides="," >
        #{item.operateId,jdbcType=INTEGER},#{item.type,jdbcType=VARCHAR},#{item.bid,jdbcType=VARCHAR},#{item.msg,jdbcType=VARCHAR},#{item.addtime,jdbcType=TIMESTAMP},
      </trim>
      )
    </foreach>
  </insert>
</mapper>